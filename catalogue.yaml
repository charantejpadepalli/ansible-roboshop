- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y 
  
  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y 

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create system user
    ansible.builtin.user:
      name: roboshop
      comment: Roboshop Application User
      shell: /sbin/nologin
      system: true
      home: /app 

  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app
  
  - name: download catalogue Application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip
    
  - name: extract catalogue Application
    ansible.builtin.unarchieve:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app
  
  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present
    
  - name: connecto to mongodb catalogue 
    ansible.builtin.command: mongosh mongodb.devopspractice.shop --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  - name: load prodcuts into mongodb 
    ansible.builtin.shell: mongosh --host mongodb.devopspractice.shop </app/db/master-data.js
    when: catalogue_output.stdout | int < 0

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: catalogue
      state: started
      enabled: true
      daemon_reload: true



